
package gui;

import bus.ChatLieu_bus;
import bus.DanhMucSanPham_bus;
import entity.SanPhamEntity;
import java.awt.Image;
import java.io.File;
import java.util.ArrayList;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.table.DefaultTableModel;
import bus.SanPham_bus;
import bus.ThuongHieu_bus;
import entity.ChatLieuEntity;
import entity.DanhMucSanPhamEntity;
import entity.KichThuocEnum;
import entity.MauSacEnum;
import entity.ThuongHieuEntity;
import entity.TinhTrangSPEnum;
import java.awt.Component;
import java.awt.Font;
import java.text.DecimalFormat;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.JTableHeader;
import util.GenerateID;

/**
 *
 * @author 84335
 */
public class SanPham_JPanel extends javax.swing.JPanel {
    private String duongDanAnhMacDinh = "src//pic//icon//labelAnh.png";
    private String duongDanAnh = null;
    private SanPham_bus sp_bus;
    private DanhMucSanPham_bus danhMucSanPham_bus;
    private ThuongHieu_bus thuongHieu_bus;
    private ChatLieu_bus chatLieu_bus;

    /**
     * Creates new form SanPham_JPanel
     */
    public SanPham_JPanel() {
        initComponents();
        //----------
        sp_bus = new SanPham_bus();
        danhMucSanPham_bus = new DanhMucSanPham_bus();
        thuongHieu_bus = new ThuongHieu_bus();
        chatLieu_bus = new ChatLieu_bus();
        //----------
        setBounds(0, 0, 1020, 720);
        ImageIcon img_btnTimKiem = new ImageIcon("src//pic//icon//buttonTimKiem.png");
        Image scaled_btnTimKiem = img_btnTimKiem.getImage().getScaledInstance(15, 15, Image.SCALE_SMOOTH);
        img_btnTimKiem = new ImageIcon(scaled_btnTimKiem);
        btn_TimKiem.setIcon(img_btnTimKiem);
        ImageIcon img_btnLamMoi = new ImageIcon("src//pic//icon//buttonLamMoi.png");
        Image scaled_btnLamMoi = img_btnLamMoi.getImage().getScaledInstance(15, 15, Image.SCALE_SMOOTH);
        img_btnLamMoi = new ImageIcon(scaled_btnLamMoi);
        btn_LamMoi.setIcon(img_btnLamMoi);
        ImageIcon img_btnThem = new ImageIcon("src//pic//icon//buttonThem.png");
        Image scaled_btnThem = img_btnThem.getImage().getScaledInstance(15, 15, Image.SCALE_SMOOTH);
        img_btnThem = new ImageIcon(scaled_btnThem);
        btn_Them.setIcon(img_btnThem);
        ImageIcon img_btnCapNhat = new ImageIcon("src//pic//icon//buttonCapNhat.png");
        Image scaled_btnCapNhat = img_btnCapNhat.getImage().getScaledInstance(15, 15, Image.SCALE_SMOOTH);
        img_btnCapNhat = new ImageIcon(scaled_btnCapNhat);
        btn_CapNhat.setIcon(img_btnCapNhat);
        ImageIcon img_btnKiemTraTonKho = new ImageIcon("src//pic//icon//buttonKiemTraTonKho.png");
        Image scaled_btnKiemTraTonKho = img_btnKiemTraTonKho.getImage().getScaledInstance(15, 15, Image.SCALE_SMOOTH);
        img_btnKiemTraTonKho = new ImageIcon(scaled_btnKiemTraTonKho);
        btn_KiemTraTonKho.setIcon(img_btnKiemTraTonKho);
        ImageIcon img_btnChonAnh = new ImageIcon("src//pic//icon//buttonChonAnh.png");
        Image scaled_btnChonAnh = img_btnChonAnh.getImage().getScaledInstance(15, 15, Image.SCALE_SMOOTH);
        img_btnChonAnh = new ImageIcon(scaled_btnChonAnh);
        btn_ChonAnh.setIcon(img_btnChonAnh);
        ImageIcon img_lblAnh = new ImageIcon("src//pic//icon//labelAnh.png");
        Image scaled_lblAnh = img_lblAnh.getImage().getScaledInstance(150, 140, Image.SCALE_SMOOTH);
        img_lblAnh = new ImageIcon(scaled_lblAnh);
        lbl_AnhSanPham.setIcon(img_lblAnh);
        loadDuLieuTuDataLenTable();
        duaDuLieuVaoComboBox(cbo_DanhMuc, danhMucSanPham_bus.getAllDMSP(), "MaDanhMuc");
        duaDuLieuVaoComboBox(cbo_ChatLieu, chatLieu_bus.getAllCL(), "MaChatLieu");
        duaDuLieuVaoComboBox(cbo_ThuongHieu, thuongHieu_bus.getAllTH(), "MaThuongHieu");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panel_ThongTin = new javax.swing.JPanel();
        lbl_MaSanPham = new javax.swing.JLabel();
        lbl_TenSanPham = new javax.swing.JLabel();
        txt_MaSanPham = new javax.swing.JTextField();
        txt_TenSanPham = new javax.swing.JTextField();
        lbl_ThuongHieu = new javax.swing.JLabel();
        lbl_SoLuongTonKho = new javax.swing.JLabel();
        txt_SoLuongTonKho = new javax.swing.JTextField();
        lbl_DanhMuc = new javax.swing.JLabel();
        cbo_DanhMuc = new javax.swing.JComboBox<>();
        lbl_KichThuoc = new javax.swing.JLabel();
        cbo_KichThuoc = new javax.swing.JComboBox<>();
        lbl_ChatLieu = new javax.swing.JLabel();
        lbl_MauSac = new javax.swing.JLabel();
        cbo_MauSac = new javax.swing.JComboBox<>();
        lbl_TinhTrang = new javax.swing.JLabel();
        cbo_TinhTrang = new javax.swing.JComboBox<>();
        lbl_DonGia = new javax.swing.JLabel();
        txt_DonGia = new javax.swing.JTextField();
        lbl_AnhSanPham = new javax.swing.JLabel();
        btn_ChonAnh = new javax.swing.JButton();
        cbo_ChatLieu = new javax.swing.JComboBox<>();
        cbo_ThuongHieu = new javax.swing.JComboBox<>();
        panel_ThaoTac = new javax.swing.JPanel();
        lbl_MaSanPham_Search = new javax.swing.JLabel();
        btn_TimKiem = new javax.swing.JButton();
        btn_LamMoi = new javax.swing.JButton();
        btn_Them = new javax.swing.JButton();
        btn_CapNhat = new javax.swing.JButton();
        txt_MaSanPham_Search = new javax.swing.JTextField();
        btn_KiemTraTonKho = new javax.swing.JButton();
        panel_DanhSachSanPham = new javax.swing.JPanel();
        scroll_TableSanPham = new javax.swing.JScrollPane();
        Object[][] data={};
        String[] columnNames={"Mã","Tên sản phẩm", "Kích thước", "Màu sắc", "Đơn giá", "Tình trạng", "Số lượng", "Chất liệu", "Thương hiệu", "Danh mục"};
        model=new DefaultTableModel(data, columnNames){
            @Override
            public boolean isCellEditable(int row, int column){
                return false;
            }
        };
        table_DanhSachSanPham = new javax.swing.JTable();
        lbl_TieuDe = new javax.swing.JLabel();

        setBackground(new java.awt.Color(187, 205, 197));
        setPreferredSize(new java.awt.Dimension(1020, 700));

        panel_ThongTin.setBackground(new java.awt.Color(187, 205, 197));
        panel_ThongTin.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Thông tin nhà cung cấp", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 0, 12))); // NOI18N

        lbl_MaSanPham.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        lbl_MaSanPham.setText("Mã sản phẩm");
        lbl_MaSanPham.setPreferredSize(new java.awt.Dimension(85, 15));

        lbl_TenSanPham.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        lbl_TenSanPham.setText("Tên sản phẩm");
        lbl_TenSanPham.setPreferredSize(new java.awt.Dimension(85, 15));

        txt_MaSanPham.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txt_MaSanPham.setEditable(false);

        txt_TenSanPham.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        lbl_ThuongHieu.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        lbl_ThuongHieu.setText("Thương hiệu");
        lbl_ThuongHieu.setPreferredSize(new java.awt.Dimension(85, 15));

        lbl_SoLuongTonKho.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        lbl_SoLuongTonKho.setText("Số lượng tồn kho");
        lbl_SoLuongTonKho.setMaximumSize(new java.awt.Dimension(82, 15));
        lbl_SoLuongTonKho.setMinimumSize(new java.awt.Dimension(82, 15));
        lbl_SoLuongTonKho.setPreferredSize(new java.awt.Dimension(85, 15));

        txt_SoLuongTonKho.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        lbl_DanhMuc.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        lbl_DanhMuc.setText("Danh mục");
        lbl_DanhMuc.setPreferredSize(new java.awt.Dimension(85, 15));

        cbo_DanhMuc.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        lbl_KichThuoc.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        lbl_KichThuoc.setText("Kích thước");
        lbl_KichThuoc.setPreferredSize(new java.awt.Dimension(85, 15));

        cbo_KichThuoc.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        cbo_KichThuoc.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "XS", "S", "M", "L", "XL", "XXL" }));
        cbo_KichThuoc.setSelectedIndex(1);
        cbo_KichThuoc.setSelectedItem("S");

        lbl_ChatLieu.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        lbl_ChatLieu.setText("Chất liệu");
        lbl_ChatLieu.setPreferredSize(new java.awt.Dimension(85, 15));

        lbl_MauSac.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        lbl_MauSac.setText("Màu sắc");
        lbl_MauSac.setPreferredSize(new java.awt.Dimension(85, 15));

        cbo_MauSac.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        cbo_MauSac.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Trắng", "Đen", "Xám" }));
        cbo_MauSac.setSelectedItem("Trắng");

        lbl_TinhTrang.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        lbl_TinhTrang.setText("Tình trạng");
        lbl_TinhTrang.setPreferredSize(new java.awt.Dimension(85, 15));

        cbo_TinhTrang.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        cbo_TinhTrang.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Ngừng bán", "Đang bán" }));
        cbo_TinhTrang.setSelectedItem("Đang bán");

        lbl_DonGia.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        lbl_DonGia.setText("Đơn giá");
        lbl_DonGia.setMaximumSize(new java.awt.Dimension(82, 15));
        lbl_DonGia.setMinimumSize(new java.awt.Dimension(82, 15));
        lbl_DonGia.setPreferredSize(new java.awt.Dimension(85, 15));

        txt_DonGia.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        lbl_AnhSanPham.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        btn_ChonAnh.setBackground(new java.awt.Color(0, 51, 51));
        btn_ChonAnh.setFont(new java.awt.Font("Times New Roman", 1, 15)); // NOI18N
        btn_ChonAnh.setForeground(java.awt.Color.white);
        btn_ChonAnh.setText("Chọn ảnh");
        btn_ChonAnh.setHorizontalAlignment(javax.swing.SwingConstants.LEADING);
        btn_ChonAnh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ChonAnhActionPerformed(evt);
            }
        });

        cbo_ChatLieu.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        cbo_ThuongHieu.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        javax.swing.GroupLayout panel_ThongTinLayout = new javax.swing.GroupLayout(panel_ThongTin);
        panel_ThongTin.setLayout(panel_ThongTinLayout);
        panel_ThongTinLayout.setHorizontalGroup(
            panel_ThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_ThongTinLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel_ThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel_ThongTinLayout.createSequentialGroup()
                        .addGroup(panel_ThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panel_ThongTinLayout.createSequentialGroup()
                                .addComponent(lbl_MaSanPham, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txt_MaSanPham, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panel_ThongTinLayout.createSequentialGroup()
                                .addComponent(lbl_TenSanPham, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txt_TenSanPham, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panel_ThongTinLayout.createSequentialGroup()
                                .addComponent(lbl_KichThuoc, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cbo_KichThuoc, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(38, 38, 38)
                        .addGroup(panel_ThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(panel_ThongTinLayout.createSequentialGroup()
                                .addComponent(lbl_DanhMuc, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cbo_DanhMuc, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panel_ThongTinLayout.createSequentialGroup()
                                .addGroup(panel_ThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lbl_SoLuongTonKho, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lbl_ThuongHieu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(panel_ThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cbo_ThuongHieu, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt_SoLuongTonKho, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(panel_ThongTinLayout.createSequentialGroup()
                        .addGroup(panel_ThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(panel_ThongTinLayout.createSequentialGroup()
                                .addComponent(lbl_ChatLieu, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cbo_ChatLieu, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(panel_ThongTinLayout.createSequentialGroup()
                                .addComponent(lbl_MauSac, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cbo_MauSac, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(38, 38, 38)
                        .addGroup(panel_ThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panel_ThongTinLayout.createSequentialGroup()
                                .addComponent(lbl_TinhTrang, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cbo_TinhTrang, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panel_ThongTinLayout.createSequentialGroup()
                                .addComponent(lbl_DonGia, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txt_DonGia, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 84, Short.MAX_VALUE)
                .addGroup(panel_ThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(lbl_AnhSanPham, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_ChonAnh, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(72, 72, 72))
        );
        panel_ThongTinLayout.setVerticalGroup(
            panel_ThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_ThongTinLayout.createSequentialGroup()
                .addComponent(lbl_AnhSanPham, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_ChonAnh, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10))
            .addGroup(panel_ThongTinLayout.createSequentialGroup()
                .addGroup(panel_ThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_MaSanPham, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_MaSanPham, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lbl_ThuongHieu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cbo_ThuongHieu, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panel_ThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_TenSanPham, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_TenSanPham, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_SoLuongTonKho, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_SoLuongTonKho, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panel_ThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbo_DanhMuc, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_DanhMuc, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbo_KichThuoc, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_KichThuoc, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panel_ThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_ChatLieu, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbo_TinhTrang, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_TinhTrang, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbo_ChatLieu, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panel_ThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbo_MauSac, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_MauSac, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_DonGia, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_DonGia, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16))
        );

        panel_ThaoTac.setBackground(new java.awt.Color(187, 205, 197));
        panel_ThaoTac.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Các thao tác", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 0, 12))); // NOI18N
        panel_ThaoTac.setPreferredSize(new java.awt.Dimension(932, 60));
        panel_ThaoTac.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lbl_MaSanPham_Search.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        lbl_MaSanPham_Search.setText("Mã sản phẩm");
        panel_ThaoTac.add(lbl_MaSanPham_Search, new org.netbeans.lib.awtextra.AbsoluteConstraints(11, 24, -1, -1));

        btn_TimKiem.setBackground(new java.awt.Color(0, 51, 51));
        btn_TimKiem.setFont(new java.awt.Font("Times New Roman", 1, 15)); // NOI18N
        btn_TimKiem.setForeground(java.awt.Color.white);
        btn_TimKiem.setText("Tìm kiếm");
        btn_TimKiem.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_TimKiem.setHorizontalAlignment(javax.swing.SwingConstants.LEADING);
        btn_TimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_TimKiemActionPerformed(evt);
            }
        });
        panel_ThaoTac.add(btn_TimKiem, new org.netbeans.lib.awtextra.AbsoluteConstraints(305, 19, 120, 30));

        btn_LamMoi.setBackground(new java.awt.Color(0, 51, 51));
        btn_LamMoi.setFont(new java.awt.Font("Times New Roman", 1, 15)); // NOI18N
        btn_LamMoi.setForeground(java.awt.Color.white);
        btn_LamMoi.setText("Làm mới");
        btn_LamMoi.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_LamMoi.setHorizontalAlignment(javax.swing.SwingConstants.LEADING);
        btn_LamMoi.setPreferredSize(new java.awt.Dimension(90, 31));
        btn_LamMoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_LamMoiActionPerformed(evt);
            }
        });
        panel_ThaoTac.add(btn_LamMoi, new org.netbeans.lib.awtextra.AbsoluteConstraints(431, 19, 120, 30));

        btn_Them.setBackground(new java.awt.Color(0, 51, 51));
        btn_Them.setFont(new java.awt.Font("Times New Roman", 1, 15)); // NOI18N
        btn_Them.setForeground(java.awt.Color.white);
        btn_Them.setText("Thêm");
        btn_Them.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_Them.setPreferredSize(new java.awt.Dimension(90, 31));
        btn_Them.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ThemActionPerformed(evt);
            }
        });
        panel_ThaoTac.add(btn_Them, new org.netbeans.lib.awtextra.AbsoluteConstraints(557, 19, 120, 30));

        btn_CapNhat.setBackground(new java.awt.Color(0, 51, 51));
        btn_CapNhat.setFont(new java.awt.Font("Times New Roman", 1, 15)); // NOI18N
        btn_CapNhat.setForeground(java.awt.Color.white);
        btn_CapNhat.setText("Cập nhật");
        btn_CapNhat.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_CapNhat.setHorizontalAlignment(javax.swing.SwingConstants.LEADING);
        btn_CapNhat.setPreferredSize(new java.awt.Dimension(90, 31));
        btn_CapNhat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_CapNhatActionPerformed(evt);
            }
        });
        panel_ThaoTac.add(btn_CapNhat, new org.netbeans.lib.awtextra.AbsoluteConstraints(683, 19, 120, 30));

        txt_MaSanPham_Search.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        panel_ThaoTac.add(txt_MaSanPham_Search, new org.netbeans.lib.awtextra.AbsoluteConstraints(99, 21, 194, 25));

        btn_KiemTraTonKho.setBackground(new java.awt.Color(0, 51, 51));
        btn_KiemTraTonKho.setFont(new java.awt.Font("Times New Roman", 1, 15)); // NOI18N
        btn_KiemTraTonKho.setForeground(java.awt.Color.white);
        btn_KiemTraTonKho.setText("Kiểm tra kho hàng");
        btn_KiemTraTonKho.setHorizontalAlignment(javax.swing.SwingConstants.LEADING);
        btn_KiemTraTonKho.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_KiemTraTonKhoActionPerformed(evt);
            }
        });
        panel_ThaoTac.add(btn_KiemTraTonKho, new org.netbeans.lib.awtextra.AbsoluteConstraints(809, 19, -1, 30));

        panel_DanhSachSanPham.setBackground(new java.awt.Color(187, 205, 197));
        panel_DanhSachSanPham.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Bảng danh sách sản phẩm", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 0, 12))); // NOI18N
        panel_DanhSachSanPham.setPreferredSize(new java.awt.Dimension(1008, 317));

        JTableHeader tableHeader=table_DanhSachSanPham.getTableHeader();
        tableHeader.setFont(new Font("Times New Roman", Font.BOLD, 13));
        table_DanhSachSanPham.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        table_DanhSachSanPham.setModel(model);
        table_DanhSachSanPham.getColumnModel().getColumn(0).setPreferredWidth(100);
        table_DanhSachSanPham.getColumnModel().getColumn(1).setPreferredWidth(200);
        table_DanhSachSanPham.getColumnModel().getColumn(2).setCellRenderer(new CenterRenderer());
        table_DanhSachSanPham.getColumnModel().getColumn(3).setCellRenderer(new CenterRenderer());
        table_DanhSachSanPham.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                table_DanhSachSanPhamMouseClicked(evt);
            }
        });
        scroll_TableSanPham.setViewportView(table_DanhSachSanPham);

        javax.swing.GroupLayout panel_DanhSachSanPhamLayout = new javax.swing.GroupLayout(panel_DanhSachSanPham);
        panel_DanhSachSanPham.setLayout(panel_DanhSachSanPhamLayout);
        panel_DanhSachSanPhamLayout.setHorizontalGroup(
            panel_DanhSachSanPhamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(scroll_TableSanPham, javax.swing.GroupLayout.DEFAULT_SIZE, 998, Short.MAX_VALUE)
        );
        panel_DanhSachSanPhamLayout.setVerticalGroup(
            panel_DanhSachSanPhamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(scroll_TableSanPham, javax.swing.GroupLayout.DEFAULT_SIZE, 341, Short.MAX_VALUE)
        );

        lbl_TieuDe.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        lbl_TieuDe.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl_TieuDe.setText("QUẢN LÝ SẢN PHẨM");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panel_ThongTin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(panel_DanhSachSanPham, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(panel_ThaoTac, javax.swing.GroupLayout.PREFERRED_SIZE, 1008, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 1, Short.MAX_VALUE)))
                .addContainerGap())
            .addComponent(lbl_TieuDe, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbl_TieuDe, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panel_ThongTin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panel_ThaoTac, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panel_DanhSachSanPham, javax.swing.GroupLayout.PREFERRED_SIZE, 363, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents
    private void loadDuLieuTuDataLenTable() {
        ArrayList<SanPhamEntity> dsSanPham = sp_bus.getAllSanPham();
        DecimalFormat decimalFormat=new DecimalFormat();    
        for (SanPhamEntity sp : dsSanPham) {
            String formattedDonGia = decimalFormat.format(sp.getDonGia())+" VNĐ";
            model.addRow(new Object[]{sp.getMaSP(), sp.getTenSP(), sp.getKichThuoc(),
                sp.getMauSac().toString(), formattedDonGia, sp.getTinhTrang().toString(),
                sp.getSoLuongTonKho(), sp.getChatLieu().getMaChatLieu(),
                sp.getThuongHieu().getMaThuongHieu(), sp.getDanhMucSanPham().getMaDanhMuc()});
        }
    }
    private void btn_ChonAnhActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_ChonAnhActionPerformed
        JFileChooser fileChooser = new JFileChooser("src//pic//imageProduct");
        fileChooser.setDialogTitle("Mở file");
        int kq = fileChooser.showOpenDialog(null);
        if (kq == JFileChooser.APPROVE_OPTION) {
            File tenAnh = fileChooser.getSelectedFile();
            String tenTepAnh=tenAnh.getName();
            duongDanAnh="src//pic//imageProduct//"+tenTepAnh;
            lbl_AnhSanPham.setIcon(ResizeImageIcon(duongDanAnh));
        } else if (kq == JFileChooser.CANCEL_OPTION) {

        } else {
            JOptionPane.showMessageDialog(null, "Lỗi chọn ảnh");
        }
    }//GEN-LAST:event_btn_ChonAnhActionPerformed
    private ImageIcon ResizeImageIcon(String ImagePath) {
        ImageIcon myIcon = new ImageIcon(ImagePath);
        Image img = myIcon.getImage().getScaledInstance(lbl_AnhSanPham.getWidth(), lbl_AnhSanPham.getHeight(), Image.SCALE_SMOOTH);
        ImageIcon image = new ImageIcon(img);
        return image;
    }
    private void btn_ThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_ThemActionPerformed
        // TODO add your handling code here:
        themSanPham();
    }//GEN-LAST:event_btn_ThemActionPerformed

    private void table_DanhSachSanPhamMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_table_DanhSachSanPhamMouseClicked
        // TODO add your handling code here:
        int row = table_DanhSachSanPham.getSelectedRow();
        txt_MaSanPham.setText(model.getValueAt(row, 0).toString());
        txt_TenSanPham.setText(model.getValueAt(row, 1).toString());
        cbo_KichThuoc.setSelectedItem(model.getValueAt(row, 2).toString());
        cbo_MauSac.setSelectedItem(model.getValueAt(row, 3).toString());
        txt_DonGia.setText(model.getValueAt(row, 4).toString());
        cbo_TinhTrang.setSelectedItem(model.getValueAt(row, 5).toString());
        txt_SoLuongTonKho.setText(model.getValueAt(row, 6).toString());
        cbo_ChatLieu.setSelectedItem(model.getValueAt(row, 7).toString());
        cbo_ThuongHieu.setSelectedItem(model.getValueAt(row, 8).toString());
        cbo_DanhMuc.setSelectedItem(model.getValueAt(row, 9).toString());
        kiemTraAnhNull(row);
//        lbl_AnhSanPham.setIcon(ResizeImageIcon(String.valueOf(sp_bus.getAllSanPham().get(row).getImgUrl())));
    }//GEN-LAST:event_table_DanhSachSanPhamMouseClicked

    private void btn_TimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_TimKiemActionPerformed
        // TODO add your handling code here:
        String dieuKien = txt_MaSanPham_Search.getText().trim();
        timKiemSanPham(dieuKien);

    }//GEN-LAST:event_btn_TimKiemActionPerformed

    private void btn_LamMoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_LamMoiActionPerformed
        // TODO add your handling code here:
        lamMoi();
    }//GEN-LAST:event_btn_LamMoiActionPerformed

    private void btn_CapNhatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_CapNhatActionPerformed
        // TODO add your handling code here:
        capNhatSanPham();
    }//GEN-LAST:event_btn_CapNhatActionPerformed

    private void btn_KiemTraTonKhoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_KiemTraTonKhoActionPerformed
        // TODO add your handling code here:
        kiemTraTonKho();
    }//GEN-LAST:event_btn_KiemTraTonKhoActionPerformed
    //Hàm kiểm tra ảnh
    private void kiemTraAnhNull(int row) {
        String img = sp_bus.getAllSanPham().get(row).getImgUrl();
        ImageIcon imageIcon;
        if (img != null) {
            imageIcon = new ImageIcon(new ImageIcon(img).getImage().getScaledInstance(lbl_AnhSanPham.getWidth(), lbl_AnhSanPham.getHeight(), Image.SCALE_SMOOTH));
        } else {
            ImageIcon anhMacDinh = new ImageIcon("src//pic//icon//labelAnh.png");
            imageIcon = new ImageIcon(anhMacDinh.getImage().getScaledInstance(lbl_AnhSanPham.getWidth(), lbl_AnhSanPham.getHeight(), Image.SCALE_SMOOTH));
        }
        lbl_AnhSanPham.setIcon(imageIcon);
    }

    //Hàm thêm sản phẩm
    private void themSanPham() {
        String maSP = GenerateID.sinhMa("SP");
        String tenSanPham = txt_TenSanPham.getText();
        KichThuocEnum kichThuoc = null;
        if (cbo_KichThuoc.getSelectedItem().equals("XS")) {
            kichThuoc = KichThuocEnum.XS;
        } else if (cbo_KichThuoc.getSelectedItem().equals("S")) {
            kichThuoc = KichThuocEnum.S;
        } else if (cbo_KichThuoc.getSelectedItem().equals("M")) {
            kichThuoc = KichThuocEnum.M;
        } else if (cbo_KichThuoc.getSelectedItem().equals("L")) {
            kichThuoc = KichThuocEnum.L;
        } else if (cbo_KichThuoc.getSelectedItem().equals("XL")) {
            kichThuoc = KichThuocEnum.XL;
        } else if (cbo_KichThuoc.getSelectedItem().equals("XXL")) {
            kichThuoc = KichThuocEnum.XXL;
        }
        MauSacEnum mauSac = null;
        if (cbo_MauSac.getSelectedItem().equals("Trắng")) {
            mauSac = MauSacEnum.TRANG;
        } else if (cbo_MauSac.getSelectedItem().equals("Đen")) {
            mauSac = MauSacEnum.DEN;
        } else if (cbo_MauSac.getSelectedItem().equals("Xám")) {
            mauSac = MauSacEnum.XAM;
        }
        double donGia = Double.parseDouble(txt_DonGia.getText());
        TinhTrangSPEnum tinhTrang = null;
        if (cbo_TinhTrang.getSelectedItem().equals("Đang bán")) {
            tinhTrang = TinhTrangSPEnum.DANGBAN;
        } else if (cbo_TinhTrang.getSelectedItem().equals("Ngừng bán")) {
            tinhTrang = TinhTrangSPEnum.NGUNGBAN;
        }
        int soLuongTonKho = Integer.parseInt(txt_SoLuongTonKho.getText());
        String maChatLieu = cbo_ChatLieu.getSelectedItem().toString();
        ChatLieuEntity chatLieu = new ChatLieuEntity(maChatLieu);
        String maThuongHieu = cbo_ThuongHieu.getSelectedItem().toString();
        ThuongHieuEntity thuongHieu = new ThuongHieuEntity(maThuongHieu);
        String maDanhMuc = cbo_DanhMuc.getSelectedItem().toString();
        DanhMucSanPhamEntity danhMuc = new DanhMucSanPhamEntity(maDanhMuc);
        String anh = duongDanAnh;
        if (anh == null || anh.equals(duongDanAnhMacDinh)) {
            JOptionPane.showMessageDialog(null, "Vui lòng chọn ảnh");
        } else {

            SanPhamEntity sp = new SanPhamEntity(maSP, tenSanPham, kichThuoc, mauSac, donGia, soLuongTonKho, tinhTrang, chatLieu, thuongHieu, danhMuc, anh);
            boolean kiemTra = sp_bus.themSP(sp);
            if (kiemTra) {
                model.addRow(new Object[]{sp.getMaSP(), sp.getTenSP(), sp.getKichThuoc(),
                    sp.getMauSac().toString(), sp.getDonGia(), sp.getTinhTrang().toString(),
                    sp.getSoLuongTonKho(), sp.getChatLieu().getMaChatLieu(),
                    sp.getThuongHieu().getMaThuongHieu(), sp.getDanhMucSanPham().getMaDanhMuc()});
                lamMoi();
                JOptionPane.showMessageDialog(null, "Thêm thành công");    
            } else {
                JOptionPane.showMessageDialog(null, "Thêm không thành công");
            }
        }
    }

    //Hàm tìm kiếm sản phẩm
    private void timKiemSanPham(String dieuKien) {
        model.setRowCount(0);
        ArrayList<SanPhamEntity> dsSP = sp_bus.getAllSanPham();
        for (SanPhamEntity sp : dsSP) {
            if (sp.matchesSearchTerm(dieuKien)) {
                model.addRow(new Object[]{sp.getMaSP(), sp.getTenSP(), sp.getKichThuoc().toString(),
                    sp.getMauSac().toString(), sp.getDonGia(), sp.getTinhTrang().toString(),
                    sp.getSoLuongTonKho(), sp.getChatLieu().getMaChatLieu(),
                    sp.getThuongHieu().getMaThuongHieu(), sp.getDanhMucSanPham().getMaDanhMuc()});
            }

        }

    }

    //Hàm làm mới sản phẩm
    public void lamMoi() {
        txt_MaSanPham.setText("");
        txt_TenSanPham.setText("");
        cbo_ChatLieu.setSelectedIndex(0);
        txt_DonGia.setText("");
        txt_SoLuongTonKho.setText("");
        cbo_ThuongHieu.setSelectedIndex(0);
        cbo_KichThuoc.setSelectedItem("S");
        cbo_MauSac.setSelectedItem("Trắng");
        cbo_DanhMuc.setSelectedIndex(0);
        cbo_TinhTrang.setSelectedItem("Đang bán");
        txt_MaSanPham_Search.setText("");
        model.setRowCount(0);
        ImageIcon anhMacDinh = new ImageIcon("src//pic//icon//labelAnh.png");
        ImageIcon imageIcon = new ImageIcon(anhMacDinh.getImage().getScaledInstance(lbl_AnhSanPham.getWidth(), lbl_AnhSanPham.getHeight(), Image.SCALE_SMOOTH));
        lbl_AnhSanPham.setIcon(imageIcon);
        loadDuLieuTuDataLenTable();

    }

    private void capNhatSanPham() {
        int row = table_DanhSachSanPham.getSelectedRow();
        if (row == -1) {
            JOptionPane.showMessageDialog(null, "Chưa chọn sản phẩm để cập nhật");
        } else {
            if (table_DanhSachSanPham.getSelectedRowCount() == 1) {
                if (JOptionPane.showConfirmDialog(null, "Bạn có chắc chắc cập nhật sản phẩm có mã " + table_DanhSachSanPham.getValueAt(row, 0) + " này không?", "Cảnh báo cập nhật", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
                    String maSP = txt_MaSanPham.getText();
                    String tenSanPham = txt_TenSanPham.getText();
                    KichThuocEnum kichThuoc = null;
                    if (cbo_KichThuoc.getSelectedItem().equals("XS")) {
                        kichThuoc = KichThuocEnum.XS;
                    } else if (cbo_KichThuoc.getSelectedItem().equals("S")) {
                        kichThuoc = KichThuocEnum.S;
                    } else if (cbo_KichThuoc.getSelectedItem().equals("M")) {
                        kichThuoc = KichThuocEnum.M;
                    } else if (cbo_KichThuoc.getSelectedItem().equals("L")) {
                        kichThuoc = KichThuocEnum.L;
                    } else if (cbo_KichThuoc.getSelectedItem().equals("XL")) {
                        kichThuoc = KichThuocEnum.XL;
                    } else if (cbo_KichThuoc.getSelectedItem().equals("XXL")) {
                        kichThuoc = KichThuocEnum.XXL;
                    }
                    MauSacEnum mauSac = null;
                    if (cbo_MauSac.getSelectedItem().equals("Trắng")) {
                        mauSac = MauSacEnum.TRANG;
                    } else if (cbo_MauSac.getSelectedItem().equals("Đen")) {
                        mauSac = MauSacEnum.DEN;
                    } else if (cbo_MauSac.getSelectedItem().equals("Xám")) {
                        mauSac = MauSacEnum.XAM;
                    }
                    double donGia = Double.parseDouble(txt_DonGia.getText().replace(" VNĐ", "").replace(",", ""));
                    TinhTrangSPEnum tinhTrang = null;
                    if (cbo_TinhTrang.getSelectedItem().equals("Đang bán")) {
                        tinhTrang = TinhTrangSPEnum.DANGBAN;
                    } else if (cbo_TinhTrang.getSelectedItem().equals("Ngừng bán")) {
                        tinhTrang = TinhTrangSPEnum.NGUNGBAN;
                    }
                    int soLuongTonKho = Integer.parseInt(txt_SoLuongTonKho.getText());
                    String maChatLieu = cbo_ChatLieu.getSelectedItem().toString();
                    ChatLieuEntity chatLieu = new ChatLieuEntity(maChatLieu);
                    String maThuongHieu = cbo_ThuongHieu.getSelectedItem().toString();
                    ThuongHieuEntity thuongHieu = new ThuongHieuEntity(maThuongHieu);
                    String maDanhMuc = cbo_DanhMuc.getSelectedItem().toString();
                    DanhMucSanPhamEntity danhMuc = new DanhMucSanPhamEntity(maDanhMuc);
                    String anh = duongDanAnh;
                    SanPhamEntity sp=new SanPhamEntity(maSP, tenSanPham, kichThuoc, mauSac, donGia, soLuongTonKho, tinhTrang, chatLieu, thuongHieu, danhMuc, anh);
                    boolean kq=sp_bus.capNhatSanPham(sp);
                    if(kq){
                        JOptionPane.showMessageDialog(null, "Cập nhật thành công");
                        lamMoi();
                    }else{
                        JOptionPane.showMessageDialog(null, "Cập nhật không thành công");
                    }
                }
            }
        }
    }
    private void kiemTraTonKho(){
        ArrayList<SanPhamEntity> dsSP=sp_bus.kiemTraTonKho();
        model.setRowCount(0);
        DecimalFormat decimalFormat=new DecimalFormat();    
        for (SanPhamEntity sp : dsSP) {
            String formattedDonGia = decimalFormat.format(sp.getDonGia())+" VNĐ";
            model.addRow(new Object[]{sp.getMaSP(), sp.getTenSP(), sp.getKichThuoc(),
                sp.getMauSac().toString(), formattedDonGia, sp.getTinhTrang().toString(),
                sp.getSoLuongTonKho(), sp.getChatLieu().getMaChatLieu(),
                sp.getThuongHieu().getMaThuongHieu(), sp.getDanhMucSanPham().getMaDanhMuc()});
        }
    }
    //Hàm đưa dữ liệu vào combobox
    private void duaDuLieuVaoComboBox(JComboBox comboBox, ArrayList<?> data, String thuocTinh) {
        DefaultComboBoxModel<Object> model = new DefaultComboBoxModel<>();
        for (Object item : data) {
            try {
                Object propertyValue = item.getClass().getMethod("get" + thuocTinh).invoke(item);
                model.addElement(propertyValue);
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
        comboBox.setModel(model);
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_CapNhat;
    private javax.swing.JButton btn_ChonAnh;
    private javax.swing.JButton btn_KiemTraTonKho;
    private javax.swing.JButton btn_LamMoi;
    private javax.swing.JButton btn_Them;
    private javax.swing.JButton btn_TimKiem;
    private javax.swing.JComboBox<String> cbo_ChatLieu;
    private javax.swing.JComboBox<String> cbo_DanhMuc;
    private javax.swing.JComboBox<String> cbo_KichThuoc;
    private javax.swing.JComboBox<String> cbo_MauSac;
    private javax.swing.JComboBox<String> cbo_ThuongHieu;
    private javax.swing.JComboBox<String> cbo_TinhTrang;
    private javax.swing.JLabel lbl_AnhSanPham;
    private javax.swing.JLabel lbl_ChatLieu;
    private javax.swing.JLabel lbl_DanhMuc;
    private javax.swing.JLabel lbl_DonGia;
    private javax.swing.JLabel lbl_KichThuoc;
    private javax.swing.JLabel lbl_MaSanPham;
    private javax.swing.JLabel lbl_MaSanPham_Search;
    private javax.swing.JLabel lbl_MauSac;
    private javax.swing.JLabel lbl_SoLuongTonKho;
    private javax.swing.JLabel lbl_TenSanPham;
    private javax.swing.JLabel lbl_ThuongHieu;
    private javax.swing.JLabel lbl_TieuDe;
    private javax.swing.JLabel lbl_TinhTrang;
    private javax.swing.JPanel panel_DanhSachSanPham;
    private javax.swing.JPanel panel_ThaoTac;
    private javax.swing.JPanel panel_ThongTin;
    private javax.swing.JScrollPane scroll_TableSanPham;
    private javax.swing.JTable table_DanhSachSanPham;
    private DefaultTableModel model;
    private javax.swing.JTextField txt_DonGia;
    private javax.swing.JTextField txt_MaSanPham;
    private javax.swing.JTextField txt_MaSanPham_Search;
    private javax.swing.JTextField txt_SoLuongTonKho;
    private javax.swing.JTextField txt_TenSanPham;
    // End of variables declaration//GEN-END:variables
}

class CenterRenderer extends DefaultTableCellRenderer {
 
    public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
        Component c = super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
        ((JLabel) c).setHorizontalAlignment(SwingConstants.CENTER); // Căn giữa nội dung của cột
        return c;
    }
}
